# Snakefile

import os
from math import floor

# Prepare paths
rawdata = os.path.join("results", "00-prepare", config['outputprepare'] + '.fasta')
file_name_raw = config['outputprepare']
current_path = os.getcwd()
output_dir = os.path.join(current_path, "results", "01-run", config['outputrun'])

# Derived parameters
similarity_int = floor(config['otu_similarity'] * 100)
coverage_int = floor(config['mincoverage'] * 100)
similarity_int_asg = floor(config['assign_similarity'] * 100)
strategy = config['strategy']
marker_gene = config['marker_gene']
lulu = config['lulu']
ITS = config['ITS']
NCBI_DB = config['NCBI-DB']
remote = config['remote']

# Define the list of files for the `all` rule
files_for_all_rule = [
    os.path.join(output_dir, file_name_raw + '_otu_table.txt') if strategy == "otu" else os.path.join(output_dir, file_name_raw + '_asv_table.txt'),
    os.path.join(output_dir, 'output', file_name_raw + '_otus_tax_assignments.txt') if strategy == "otu" else os.path.join(output_dir, 'output', file_name_raw + '_asvs_tax_assignments.txt'),
    os.path.join(output_dir, file_name_raw + '_biom_table')
]

# Conditionally include outputs if marker gene is 16S SILVA
if marker_gene == "16S-SILVA":
    files_for_all_rule.append(os.path.join(output_dir, 'rep_set_align', file_name_raw + '_otus_aligned.fasta') if strategy == "otu" else os.path.join(output_dir, 'rep_set_align', file_name_raw + '_asvs_aligned.fasta'))
    files_for_all_rule.append(os.path.join(output_dir, 'filtered_alignment', file_name_raw + '_otus_aligned_pfiltered.fasta') if strategy == "otu" else os.path.join(output_dir, 'filtered_alignment', file_name_raw + '_asvs_aligned_pfiltered.fasta'))
    files_for_all_rule.append(os.path.join(output_dir, 'rep_set.tre'))
    files_for_all_rule.append(os.path.join(output_dir, 'diversity_by_sample'))

# Conditionally include outputs if marker gene is 16S GREENGENES
if marker_gene == "16S-GREENGENES":
    files_for_all_rule.append(os.path.join(output_dir, 'rep_set.tre'))

# Conditionally include outputs if marker gene is 16S GREENGENES or ITS UNITE
if marker_gene == "16S-GREENGENES" or marker_gene == "ITS-FUNGI-UNITE" or marker_gene == "16S-RDP":
    files_for_all_rule.append(os.path.join(output_dir, 'diversity_by_sample'))

# Conditionally include outputs if marker gene is ITS (plants)
if marker_gene == "ITS-PLANTS-NCBI":
    files_for_all_rule.append(os.path.join(output_dir, 'diversity_by_sample_ncbi', 'ncbi_tax_assignments.txt'))
    files_for_all_rule.append(os.path.join(output_dir, file_name_raw + '_blast_plants.log'))
    files_for_all_rule.append(os.path.join(output_dir, file_name_raw + '_otu_table_plants.txt') if strategy == "otu" else os.path.join(output_dir, file_name_raw + '_asv_table_plants.txt'))

# Conditionally include outputs if marker gene is ITS (fungi)
if marker_gene == "ITS-FUNGI-NCBI":
    files_for_all_rule.append(os.path.join(output_dir, 'diversity_by_sample_ncbi', 'ncbi_tax_assignments.txt'))
    files_for_all_rule.append(os.path.join(output_dir, file_name_raw + '_blast_fungi.log'))
    files_for_all_rule.append(os.path.join(output_dir, file_name_raw + '_otu_table_fungi.txt') if strategy == "otu" else os.path.join(output_dir, file_name_raw + '_asv_table_fungi.txt'))

# Conditionally include outputs if lulu is set to on
if lulu == 'yes':
    files_for_all_rule.append(os.path.join(output_dir, 'lulu_output', 'match_list.txt'))
    files_for_all_rule.append(os.path.join(output_dir, 'lulu_output', file_name_raw + '_otu_table_lulu.txt') if strategy == "otu" else os.path.join(output_dir, 'lulu_output', file_name_raw + '_asv_table_lulu.txt'))

# Rules
rule all:
    input:
        files_for_all_rule

include: "rules/itsx_and_derep.smk"
include: "rules/sort_trim_cluster.smk"
include: "rules/uchime_fastx_renamer.smk"
include: "rules/map_and_lulu.smk"
include: "rules/marker_gene_specific.smk"
include: "rules/biom_table.smk"